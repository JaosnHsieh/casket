#!/usr/bin/env coffee



minimist =		require 'minimist'
argv = minimist process.argv.slice 2



help = [
	'Usage:'
	'casketd start <name> [-d <directory>] [-p <port>]'
	'casketd stop <name>'
	''
	'Arguments:'
	'  name        How the casket server will call itself.'
	''
	'Options:'
	'  -d, --dir   What casket server will serve. Default: ./public'
	'  -p, --port  Where the casket server will listen. Default: 8000'
].join '\n'

if argv.h is true or argv.help is true or argv._.length is 0
	process.stdout.write help
	process.exit 0
else if argv._.length is 1
	process.stdout.write help
	process.exit 1



switch argv._[0]

	when 'start'
		pm2 =			require 'pm2'
		path =			require 'path'

		options =
			dir:		'./public'
			port:		8000

		if argv.d? then options.dir = argv.d
		if argv.dir? then options.dir = argv.dir

		if argv.p? then options.port = argv.p
		if argv.port? then options.port = argv.port

		options =
			exec_mode:			'fork_mode'
			exec_interpreter:	'coffee'
			name:				"casket-#{argv._[1]}"
			script:				path.join __dirname, 'casket'
			args: [
				'-n', argv._[1]
				'-d', path.resolve process.cwd(), options.dir
				'-p', options.port
			]
			watch:				false

		pm2.connect ()->
			pm2.start options, (err) ->
				if err then throw err
				pm2.disconnect()



	when 'stop'
		pm2 =			require 'pm2'

		pm2.connect ()->
			pm2.stop "casket-#{argv._[1]}", (err) ->
				if err then throw err
				pm2.disconnect()



	else
		process.stdout.write help
		process.exit 1
